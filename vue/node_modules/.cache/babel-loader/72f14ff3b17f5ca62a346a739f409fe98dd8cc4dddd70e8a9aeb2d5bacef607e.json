{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { listRole, getRole, delRole, addRole, updateRole, dataScope, changeRoleStatus, deptTreeSelect } from \"@/api/system/role\";\nimport { treeselect as menuTreeselect, roleMenuTreeselect } from \"@/api/system/menu\";\nexport default {\n  name: \"Role\",\n  dicts: ['sys_normal_disable'],\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 角色表格数据\n      roleList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 是否显示弹出层（数据权限）\n      openDataScope: false,\n      menuExpand: false,\n      menuNodeAll: false,\n      deptExpand: true,\n      deptNodeAll: false,\n      // 日期范围\n      dateRange: [],\n      // 数据范围选项\n      dataScopeOptions: [{\n        value: \"1\",\n        label: \"全部数据权限\"\n      }, {\n        value: \"2\",\n        label: \"自定数据权限\"\n      }, {\n        value: \"3\",\n        label: \"本部门数据权限\"\n      }, {\n        value: \"4\",\n        label: \"本部门及以下数据权限\"\n      }, {\n        value: \"5\",\n        label: \"仅本人数据权限\"\n      }],\n      // 菜单列表\n      menuOptions: [],\n      // 部门列表\n      deptOptions: [],\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        roleName: undefined,\n        roleKey: undefined,\n        status: undefined\n      },\n      // 表单参数\n      form: {},\n      defaultProps: {\n        children: \"children\",\n        label: \"label\"\n      },\n      // 表单校验\n      rules: {\n        roleName: [{\n          required: true,\n          message: \"角色名称不能为空\",\n          trigger: \"blur\"\n        }],\n        roleKey: [{\n          required: true,\n          message: \"权限字符不能为空\",\n          trigger: \"blur\"\n        }],\n        roleSort: [{\n          required: true,\n          message: \"角色顺序不能为空\",\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    /** 查询角色列表 */\n    getList() {\n      this.loading = true;\n      listRole(this.addDateRange(this.queryParams, this.dateRange)).then(response => {\n        this.roleList = response.rows;\n        this.total = response.total;\n        this.loading = false;\n      });\n    },\n    /** 查询菜单树结构 */\n    getMenuTreeselect() {\n      menuTreeselect().then(response => {\n        this.menuOptions = response.data;\n      });\n    },\n    // 所有菜单节点数据\n    getMenuAllCheckedKeys() {\n      // 目前被选中的菜单节点\n      let checkedKeys = this.$refs.menu.getCheckedKeys();\n      // 半选中的菜单节点\n      let halfCheckedKeys = this.$refs.menu.getHalfCheckedKeys();\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys);\n      return checkedKeys;\n    },\n    // 所有部门节点数据\n    getDeptAllCheckedKeys() {\n      // 目前被选中的部门节点\n      let checkedKeys = this.$refs.dept.getCheckedKeys();\n      // 半选中的部门节点\n      let halfCheckedKeys = this.$refs.dept.getHalfCheckedKeys();\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys);\n      return checkedKeys;\n    },\n    /** 根据角色ID查询菜单树结构 */\n    getRoleMenuTreeselect(roleId) {\n      return roleMenuTreeselect(roleId).then(response => {\n        this.menuOptions = response.menus;\n        return response;\n      });\n    },\n    /** 根据角色ID查询部门树结构 */\n    getDeptTree(roleId) {\n      return deptTreeSelect(roleId).then(response => {\n        this.deptOptions = response.depts;\n        return response;\n      });\n    },\n    // 角色状态修改\n    handleStatusChange(row) {\n      let text = row.status === \"0\" ? \"启用\" : \"停用\";\n      this.$modal.confirm('确认要\"' + text + '\"\"' + row.roleName + '\"角色吗？').then(function () {\n        return changeRoleStatus(row.roleId, row.status);\n      }).then(() => {\n        this.$modal.msgSuccess(text + \"成功\");\n      }).catch(function () {\n        row.status = row.status === \"0\" ? \"1\" : \"0\";\n      });\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 取消按钮（数据权限）\n    cancelDataScope() {\n      this.openDataScope = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      if (this.$refs.menu != undefined) {\n        this.$refs.menu.setCheckedKeys([]);\n      }\n      this.menuExpand = false, this.menuNodeAll = false, this.deptExpand = true, this.deptNodeAll = false, this.form = {\n        roleId: undefined,\n        roleName: undefined,\n        roleKey: undefined,\n        roleSort: 0,\n        status: \"0\",\n        menuIds: [],\n        deptIds: [],\n        menuCheckStrictly: true,\n        deptCheckStrictly: true,\n        remark: undefined\n      };\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.dateRange = [];\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.roleId);\n      this.single = selection.length != 1;\n      this.multiple = !selection.length;\n    },\n    // 更多操作触发\n    handleCommand(command, row) {\n      switch (command) {\n        case \"handleDataScope\":\n          this.handleDataScope(row);\n          break;\n        case \"handleAuthUser\":\n          this.handleAuthUser(row);\n          break;\n        default:\n          break;\n      }\n    },\n    // 树权限（展开/折叠）\n    handleCheckedTreeExpand(value, type) {\n      if (type == 'menu') {\n        let treeList = this.menuOptions;\n        for (let i = 0; i < treeList.length; i++) {\n          this.$refs.menu.store.nodesMap[treeList[i].id].expanded = value;\n        }\n      } else if (type == 'dept') {\n        let treeList = this.deptOptions;\n        for (let i = 0; i < treeList.length; i++) {\n          this.$refs.dept.store.nodesMap[treeList[i].id].expanded = value;\n        }\n      }\n    },\n    // 树权限（全选/全不选）\n    handleCheckedTreeNodeAll(value, type) {\n      if (type == 'menu') {\n        this.$refs.menu.setCheckedNodes(value ? this.menuOptions : []);\n      } else if (type == 'dept') {\n        this.$refs.dept.setCheckedNodes(value ? this.deptOptions : []);\n      }\n    },\n    // 树权限（父子联动）\n    handleCheckedTreeConnect(value, type) {\n      if (type == 'menu') {\n        this.form.menuCheckStrictly = value ? true : false;\n      } else if (type == 'dept') {\n        this.form.deptCheckStrictly = value ? true : false;\n      }\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset();\n      this.getMenuTreeselect();\n      this.open = true;\n      this.title = \"添加角色\";\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      const roleId = row.roleId || this.ids;\n      const roleMenu = this.getRoleMenuTreeselect(roleId);\n      getRole(roleId).then(response => {\n        this.form = response.data;\n        this.open = true;\n        this.$nextTick(() => {\n          roleMenu.then(res => {\n            let checkedKeys = res.checkedKeys;\n            checkedKeys.forEach(v => {\n              this.$nextTick(() => {\n                this.$refs.menu.setChecked(v, true, false);\n              });\n            });\n          });\n        });\n        this.title = \"修改角色\";\n      });\n    },\n    /** 选择角色权限范围触发 */\n    dataScopeSelectChange(value) {\n      if (value !== '2') {\n        this.$refs.dept.setCheckedKeys([]);\n      }\n    },\n    /** 分配数据权限操作 */\n    handleDataScope(row) {\n      this.reset();\n      const deptTreeSelect = this.getDeptTree(row.roleId);\n      getRole(row.roleId).then(response => {\n        this.form = response.data;\n        this.openDataScope = true;\n        this.$nextTick(() => {\n          deptTreeSelect.then(res => {\n            this.$refs.dept.setCheckedKeys(res.checkedKeys);\n          });\n        });\n        this.title = \"分配数据权限\";\n      });\n    },\n    /** 分配用户操作 */\n    handleAuthUser: function (row) {\n      const roleId = row.roleId;\n      this.$router.push(\"/system/role-auth/user/\" + roleId);\n    },\n    /** 提交按钮 */\n    submitForm: function () {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          if (this.form.roleId != undefined) {\n            this.form.menuIds = this.getMenuAllCheckedKeys();\n            updateRole(this.form).then(response => {\n              this.$modal.msgSuccess(\"修改成功\");\n              this.open = false;\n              this.getList();\n            });\n          } else {\n            this.form.menuIds = this.getMenuAllCheckedKeys();\n            addRole(this.form).then(response => {\n              this.$modal.msgSuccess(\"新增成功\");\n              this.open = false;\n              this.getList();\n            });\n          }\n        }\n      });\n    },\n    /** 提交按钮（数据权限） */\n    submitDataScope: function () {\n      if (this.form.roleId != undefined) {\n        this.form.deptIds = this.getDeptAllCheckedKeys();\n        dataScope(this.form).then(response => {\n          this.$modal.msgSuccess(\"修改成功\");\n          this.openDataScope = false;\n          this.getList();\n        });\n      }\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const roleIds = row.roleId || this.ids;\n      this.$modal.confirm('是否确认删除角色编号为\"' + roleIds + '\"的数据项？').then(function () {\n        return delRole(roleIds);\n      }).then(() => {\n        this.getList();\n        this.$modal.msgSuccess(\"删除成功\");\n      }).catch(() => {});\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      this.download('system/role/export', {\n        ...this.queryParams\n      }, `role_${new Date().getTime()}.xlsx`);\n    }\n  }\n};","map":{"version":3,"names":["listRole","getRole","delRole","addRole","updateRole","dataScope","changeRoleStatus","deptTreeSelect","treeselect","menuTreeselect","roleMenuTreeselect","name","dicts","data","loading","ids","single","multiple","showSearch","total","roleList","title","open","openDataScope","menuExpand","menuNodeAll","deptExpand","deptNodeAll","dateRange","dataScopeOptions","value","label","menuOptions","deptOptions","queryParams","pageNum","pageSize","roleName","undefined","roleKey","status","form","defaultProps","children","rules","required","message","trigger","roleSort","created","getList","methods","addDateRange","then","response","rows","getMenuTreeselect","getMenuAllCheckedKeys","checkedKeys","$refs","menu","getCheckedKeys","halfCheckedKeys","getHalfCheckedKeys","unshift","apply","getDeptAllCheckedKeys","dept","getRoleMenuTreeselect","roleId","menus","getDeptTree","depts","handleStatusChange","row","text","$modal","confirm","msgSuccess","catch","cancel","reset","cancelDataScope","setCheckedKeys","menuIds","deptIds","menuCheckStrictly","deptCheckStrictly","remark","resetForm","handleQuery","resetQuery","handleSelectionChange","selection","map","item","length","handleCommand","command","handleDataScope","handleAuthUser","handleCheckedTreeExpand","type","treeList","i","store","nodesMap","id","expanded","handleCheckedTreeNodeAll","setCheckedNodes","handleCheckedTreeConnect","handleAdd","handleUpdate","roleMenu","$nextTick","res","forEach","v","setChecked","dataScopeSelectChange","$router","push","submitForm","validate","valid","submitDataScope","handleDelete","roleIds","handleExport","download","Date","getTime"],"sources":["src/views/manager/Blog.vue"],"sourcesContent":["<!--<template>-->\n<!--  <div>-->\n<!--    <div class=\"search\">-->\n\n<!--      <el-input placeholder=\"请输入标题查询\" style=\"width: 200px; margin-right: 10px\" v-model=\"title\"></el-input>-->\n<!--      <el-input placeholder=\"请输入分类查询\" style=\"width: 200px; margin-right: 10px\" v-model=\"categoryName\"></el-input>-->\n<!--      <el-input placeholder=\"请输入用户名称查询\" style=\"width: 200px\" v-model=\"userName\"></el-input>-->\n<!--      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>-->\n<!--      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>-->\n<!--    </div>-->\n\n<!--    <div class=\"operation\">-->\n<!--      <el-button type=\"primary\" plain @click=\"handleAdd\">新增</el-button>-->\n<!--      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>-->\n<!--    </div>-->\n\n<!--    <div class=\"table\">-->\n<!--      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">-->\n<!--        <el-table-column type=\"selection\" width=\"55\" align=\"center\"></el-table-column>-->\n<!--        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>-->\n<!--        <el-table-column prop=\"title\" label=\"标题\" show-overflow-tooltip></el-table-column>-->\n<!--        <el-table-column prop=\"descr\" label=\"简介\" show-overflow-tooltip></el-table-column>-->\n<!--        <el-table-column prop=\"cover\" label=\"封面\">-->\n<!--          <template v-slot=\"scope\">-->\n<!--            <div style=\"display: flex; align-items: center\">-->\n<!--              <el-image style=\"width: 50px; height: 50px; border-radius: 5px\" v-if=\"scope.row.cover\"-->\n<!--                        :src=\"scope.row.cover\" :preview-src-list=\"[scope.row.cover]\"></el-image>-->\n<!--            </div>-->\n<!--          </template>-->\n<!--        </el-table-column>-->\n<!--        <el-table-column prop=\"categoryName\" label=\"分类\"></el-table-column>-->\n<!--        <el-table-column prop=\"tags\" label=\"标签\">-->\n<!--          <template v-slot=\"scope\">-->\n<!--            <el-tag v-for=\"item in JSON.parse(scope.row.tags || '[]')\" :key=\"item\" style=\"margin-right: 5px\">{{ item }}</el-tag>-->\n<!--          </template>-->\n<!--        </el-table-column>-->\n<!--        <el-table-column prop=\"userName\" label=\"发布人\"></el-table-column>-->\n<!--        <el-table-column prop=\"date\" label=\"发布日期\"></el-table-column>-->\n<!--&lt;!&ndash;        <el-table-column prop=\"readCount\" label=\"浏览量\"></el-table-column>&ndash;&gt;-->\n<!--        <el-table-column label=\"查看内容\">-->\n<!--          <template v-slot=\"scope\">-->\n<!--            <el-button @click=\"preview(scope.row.content)\">查看内容</el-button>-->\n<!--          </template>-->\n<!--        </el-table-column>-->\n<!--        <el-table-column label=\"操作\" align=\"center\" width=\"180\">-->\n<!--          <template v-slot=\"scope\">-->\n<!--            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\">编辑</el-button>-->\n<!--            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\">删除</el-button>-->\n<!--          </template>-->\n<!--        </el-table-column>-->\n<!--      </el-table>-->\n\n<!--      <div class=\"pagination\">-->\n<!--        <el-pagination-->\n<!--            background-->\n<!--            @current-change=\"handleCurrentChange\"-->\n<!--            :current-page=\"pageNum\"-->\n<!--            :page-sizes=\"[5, 10, 20]\"-->\n<!--            :page-size=\"pageSize\"-->\n<!--            layout=\"total, prev, pager, next\"-->\n<!--            :total=\"total\">-->\n<!--        </el-pagination>-->\n<!--      </div>-->\n<!--    </div>-->\n\n\n<!--    <el-dialog title=\"信息\" :visible.sync=\"fromVisible\" width=\"60%\" :close-on-click-modal=\"false\" destroy-on-close>-->\n<!--      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">-->\n<!--        <el-form-item label=\"标题\" prop=\"title\">-->\n<!--          <el-input v-model=\"form.title\" placeholder=\"标题\"></el-input>-->\n<!--        </el-form-item>-->\n<!--        <el-form-item label=\"简介\" prop=\"descr\">-->\n<!--          <el-input type=\"textarea\" v-model=\"form.descr\" placeholder=\"简介\"></el-input>-->\n<!--        </el-form-item>-->\n<!--        <el-form-item label=\"封面\" prop=\"cover\">-->\n<!--          <el-upload-->\n<!--              :action=\"$baseUrl + '/files/upload'\"-->\n<!--              :headers=\"{ token: user.token }\"-->\n<!--              list-type=\"picture\"-->\n<!--              :on-success=\"handleCoverSuccess\"-->\n<!--          >-->\n<!--            <el-button type=\"primary\">上传封面</el-button>-->\n<!--          </el-upload>-->\n<!--        </el-form-item>-->\n<!--        <el-form-item label=\"分类\" prop=\"categoryId\">-->\n<!--          <el-select v-model=\"form.categoryId\" style=\"width: 100%\">-->\n<!--            <el-option v-for=\"item in categoryList\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>-->\n<!--          </el-select>-->\n<!--        </el-form-item>-->\n<!--        <el-form-item label=\"标签\" prop=\"tags\">-->\n<!--          <el-select v-model=\"tagsArr\" multiple filterable allow-create default-first-option style=\"width: 100%\">-->\n<!--            <el-option value=\"后端\"></el-option>-->\n<!--            <el-option value=\"Java\"></el-option>-->\n<!--            <el-option value=\"面试\"></el-option>-->\n<!--            <el-option value=\"Vue\"></el-option>-->\n<!--            <el-option value=\"前端\"></el-option>-->\n<!--            <el-option value=\"大数据\"></el-option>-->\n<!--            <el-option value=\"算法\"></el-option>-->\n<!--            <el-option value=\"程序员\"></el-option>-->\n<!--            <el-option value=\"小白\"></el-option>-->\n<!--          </el-select>-->\n<!--        </el-form-item>-->\n<!--        <el-form-item label=\"内容\" prop=\"content\">-->\n<!--          <div id=\"editor\"></div>-->\n<!--        </el-form-item>-->\n<!--      </el-form>-->\n<!--      <div slot=\"footer\" class=\"dialog-footer\">-->\n<!--        <el-button @click=\"fromVisible = false\">取 消</el-button>-->\n<!--        <el-button type=\"primary\" @click=\"save\">确 定</el-button>-->\n<!--      </div>-->\n<!--    </el-dialog>-->\n\n<!--    <el-dialog title=\"文章内容\" :visible.sync=\"fromVisible1\" width=\"50%\" :close-on-click-modal=\"false\" destroy-on-close>-->\n<!--      <div class=\"w-e-text\">-->\n<!--        <div v-html=\"content\"></div>-->\n<!--      </div>-->\n\n<!--      <div slot=\"footer\" class=\"dialog-footer\">-->\n<!--        <el-button @click=\"fromVisible1 = false\">关 闭</el-button>-->\n<!--      </div>-->\n<!--    </el-dialog>-->\n\n\n<!--  </div>-->\n<!--</template>-->\n\n<!--<script>-->\n<!--import E from \"wangeditor\"-->\n<!--import hljs from 'highlight.js'-->\n\n<!--export default {-->\n<!--  name: \"Blog\",-->\n<!--  data() {-->\n<!--    return {-->\n<!--      tableData: [],  // 所有的数据-->\n<!--      pageNum: 1,   // 当前的页码-->\n<!--      pageSize: 10,  // 每页显示的个数-->\n<!--      total: 0,-->\n<!--      title: null,-->\n<!--      categoryName: null,-->\n<!--      userName: null,-->\n<!--      fromVisible: false,-->\n<!--      form: {},-->\n<!--      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),-->\n<!--      rules: {},-->\n<!--      ids: [],-->\n<!--      categoryList: [],-->\n<!--      tagsArr: [],-->\n<!--      editor: null,-->\n<!--      content: '',-->\n<!--      fromVisible1: false-->\n<!--    }-->\n<!--  },-->\n<!--  created() {-->\n<!--    this.load(1)-->\n<!--  },-->\n<!--  methods: {-->\n<!--    preview(content) {-->\n<!--      this.content = content-->\n<!--      this.fromVisible1 = true-->\n<!--    },-->\n<!--    handleAdd() {   // 新增数据-->\n<!--      this.form = {}  // 新增数据的时候清空数据-->\n<!--      this.tagsArr = []-->\n<!--      this.setRichText()-->\n<!--      this.fromVisible = true   // 打开弹窗-->\n<!--    },-->\n<!--    handleEdit(row) {   // 编辑数据-->\n<!--      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据-->\n<!--      this.tagsArr = JSON.parse(this.form.tags || '[]')-->\n<!--      this.fromVisible = true   // 打开弹窗-->\n<!--      this.setRichText()-->\n<!--      setTimeout(() => {-->\n<!--        this.editor.txt.html(this.form.content)-->\n<!--      }, 0)-->\n<!--    },-->\n<!--    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新-->\n<!--      this.$refs.formRef.validate((valid) => {-->\n<!--        if (valid) {-->\n<!--          this.form.tags = JSON.stringify(this.tagsArr)  // 把json数组转换成json字符串存到数据库-->\n<!--          this.form.content = this.editor.txt.html()-->\n<!--          this.$request({-->\n<!--            url: this.form.id ? '/blog/update' : '/blog/add',-->\n<!--            method: this.form.id ? 'PUT' : 'POST',-->\n<!--            data: this.form-->\n<!--          }).then(res => {-->\n<!--            if (res.code === '200') {  // 表示成功保存-->\n<!--              this.$message.success('保存成功')-->\n<!--              this.load(1)-->\n<!--              this.fromVisible = false-->\n<!--            } else {-->\n<!--              this.$message.error(res.msg)  // 弹出错误的信息-->\n<!--            }-->\n<!--          })-->\n<!--        }-->\n<!--      })-->\n<!--    },-->\n<!--    del(id) {   // 单个删除-->\n<!--      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {-->\n<!--        this.$request.delete('/blog/delete/' + id).then(res => {-->\n<!--          if (res.code === '200') {   // 表示操作成功-->\n<!--            this.$message.success('操作成功')-->\n<!--            this.load(1)-->\n<!--          } else {-->\n<!--            this.$message.error(res.msg)  // 弹出错误的信息-->\n<!--          }-->\n<!--        })-->\n<!--      }).catch(() => {-->\n<!--      })-->\n<!--    },-->\n<!--    handleSelectionChange(rows) {   // 当前选中的所有的行数据-->\n<!--      this.ids = rows.map(v => v.id)   //  [1,2]-->\n<!--    },-->\n<!--    delBatch() {   // 批量删除-->\n<!--      if (!this.ids.length) {-->\n<!--        this.$message.warning('请选择数据')-->\n<!--        return-->\n<!--      }-->\n<!--      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {-->\n<!--        this.$request.delete('/blog/delete/batch', {data: this.ids}).then(res => {-->\n<!--          if (res.code === '200') {   // 表示操作成功-->\n<!--            this.$message.success('操作成功')-->\n<!--            this.load(1)-->\n<!--          } else {-->\n<!--            this.$message.error(res.msg)  // 弹出错误的信息-->\n<!--          }-->\n<!--        })-->\n<!--      }).catch(() => {-->\n<!--      })-->\n<!--    },-->\n<!--    load(pageNum) {  // 分页查询-->\n<!--      if (pageNum) this.pageNum = pageNum-->\n<!--      this.$request.get('/blog/selectPage', {-->\n<!--        params: {-->\n<!--          pageNum: this.pageNum,-->\n<!--          pageSize: this.pageSize,-->\n<!--          title: this.title,-->\n<!--          categoryName: this.categoryName,-->\n<!--          userName: this.userName,-->\n<!--        }-->\n<!--      }).then(res => {-->\n<!--        this.tableData = res.data?.list-->\n<!--        this.total = res.data?.total-->\n<!--      })-->\n\n<!--      this.$request.get('/category/selectAll').then(res => {-->\n<!--        this.categoryList = res.data || []-->\n<!--      })-->\n<!--    },-->\n<!--    reset() {-->\n<!--      this.title = null-->\n<!--      this.categoryName = null-->\n<!--      this.userName = null-->\n<!--      this.load(1)-->\n<!--    },-->\n<!--    handleCurrentChange(pageNum) {-->\n<!--      this.load(pageNum)-->\n<!--    },-->\n<!--    handleCoverSuccess(res) {-->\n<!--      this.form.cover = res.data-->\n<!--    },-->\n<!--    setRichText() {-->\n<!--      this.$nextTick(() => {-->\n<!--        this.editor = new E(`#editor`)-->\n<!--        this.editor.highlight = hljs-->\n<!--        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload'-->\n<!--        this.editor.config.uploadFileName = 'file'-->\n<!--        this.editor.config.uploadImgHeaders = {-->\n<!--          token: this.user.token-->\n<!--        }-->\n<!--        this.editor.config.uploadImgParams = {-->\n<!--          type: 'img',-->\n<!--        }-->\n<!--        this.editor.create()  // 创建-->\n<!--      })-->\n<!--    },-->\n<!--  }-->\n<!--}-->\n<!--</script>-->\n\n<!--<style scoped>-->\n\n<!--</style>-->\n\n\n<!-- 系统管理下的角色管理-->\n<template>\n  <div class=\"app-container\">\n    <el-form :model=\"queryParams\" ref=\"queryForm\" size=\"small\" :inline=\"true\" v-show=\"showSearch\">\n      <el-form-item label=\"角色名称\" prop=\"roleName\">\n        <el-input\n            v-model=\"queryParams.roleName\"\n            placeholder=\"请输入角色名称\"\n            clearable\n            style=\"width: 240px\"\n            @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"权限字符\" prop=\"roleKey\">\n        <el-input\n            v-model=\"queryParams.roleKey\"\n            placeholder=\"请输入权限字符\"\n            clearable\n            style=\"width: 240px\"\n            @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"状态\" prop=\"status\">\n        <el-select\n            v-model=\"queryParams.status\"\n            placeholder=\"角色状态\"\n            clearable\n            style=\"width: 240px\"\n        >\n          <el-option\n              v-for=\"dict in dict.type.sys_normal_disable\"\n              :key=\"dict.value\"\n              :label=\"dict.label\"\n              :value=\"dict.value\"\n          />\n        </el-select>\n      </el-form-item>\n      <el-form-item label=\"创建时间\">\n        <el-date-picker\n            v-model=\"dateRange\"\n            style=\"width: 240px\"\n            value-format=\"yyyy-MM-dd\"\n            type=\"daterange\"\n            range-separator=\"-\"\n            start-placeholder=\"开始日期\"\n            end-placeholder=\"结束日期\"\n        ></el-date-picker>\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button\n            type=\"primary\"\n            plain\n            icon=\"el-icon-plus\"\n            size=\"mini\"\n            @click=\"handleAdd\"\n            v-hasPermi=\"['system:role:add']\"\n        >新增</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n            type=\"success\"\n            plain\n            icon=\"el-icon-edit\"\n            size=\"mini\"\n            :disabled=\"single\"\n            @click=\"handleUpdate\"\n            v-hasPermi=\"['system:role:edit']\"\n        >修改</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n            type=\"danger\"\n            plain\n            icon=\"el-icon-delete\"\n            size=\"mini\"\n            :disabled=\"multiple\"\n            @click=\"handleDelete\"\n            v-hasPermi=\"['system:role:remove']\"\n        >删除</el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n            type=\"warning\"\n            plain\n            icon=\"el-icon-download\"\n            size=\"mini\"\n            @click=\"handleExport\"\n            v-hasPermi=\"['system:role:export']\"\n        >导出</el-button>\n      </el-col>\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n    </el-row>\n\n    <el-table v-loading=\"loading\" :data=\"roleList\" @selection-change=\"handleSelectionChange\">\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\" />\n      <el-table-column label=\"角色编号\" prop=\"roleId\" width=\"120\" />\n      <el-table-column label=\"角色名称\" prop=\"roleName\" :show-overflow-tooltip=\"true\" width=\"150\" />\n      <el-table-column label=\"权限字符\" prop=\"roleKey\" :show-overflow-tooltip=\"true\" width=\"150\" />\n      <el-table-column label=\"显示顺序\" prop=\"roleSort\" width=\"100\" />\n      <el-table-column label=\"状态\" align=\"center\" width=\"100\">\n        <template slot-scope=\"scope\">\n          <el-switch\n              v-model=\"scope.row.status\"\n              active-value=\"0\"\n              inactive-value=\"1\"\n              @change=\"handleStatusChange(scope.row)\"\n          ></el-switch>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"创建时间\" align=\"center\" prop=\"createTime\" width=\"180\">\n        <template slot-scope=\"scope\">\n          <span>{{ parseTime(scope.row.createTime) }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\" v-if=\"scope.row.roleId !== 1\">\n          <el-button\n              size=\"mini\"\n              type=\"text\"\n              icon=\"el-icon-edit\"\n              @click=\"handleUpdate(scope.row)\"\n              v-hasPermi=\"['system:role:edit']\"\n          >修改</el-button>\n          <el-button\n              size=\"mini\"\n              type=\"text\"\n              icon=\"el-icon-delete\"\n              @click=\"handleDelete(scope.row)\"\n              v-hasPermi=\"['system:role:remove']\"\n          >删除</el-button>\n          <el-dropdown size=\"mini\" @command=\"(command) => handleCommand(command, scope.row)\" v-hasPermi=\"['system:role:edit']\">\n            <el-button size=\"mini\" type=\"text\" icon=\"el-icon-d-arrow-right\">更多</el-button>\n            <el-dropdown-menu slot=\"dropdown\">\n              <el-dropdown-item command=\"handleDataScope\" icon=\"el-icon-circle-check\"\n                                v-hasPermi=\"['system:role:edit']\">数据权限</el-dropdown-item>\n              <el-dropdown-item command=\"handleAuthUser\" icon=\"el-icon-user\"\n                                v-hasPermi=\"['system:role:edit']\">分配用户</el-dropdown-item>\n            </el-dropdown-menu>\n          </el-dropdown>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n        v-show=\"total>0\"\n        :total=\"total\"\n        :page.sync=\"queryParams.pageNum\"\n        :limit.sync=\"queryParams.pageSize\"\n        @pagination=\"getList\"\n    />\n\n    <!-- 添加或修改角色配置对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"500px\" append-to-body>\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"100px\">\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\n          <el-input v-model=\"form.roleName\" placeholder=\"请输入角色名称\" />\n        </el-form-item>\n        <el-form-item prop=\"roleKey\">\n          <span slot=\"label\">\n            <el-tooltip content=\"控制器中定义的权限字符，如：@PreAuthorize(`@ss.hasRole('admin')`)\" placement=\"top\">\n              <i class=\"el-icon-question\"></i>\n            </el-tooltip>\n            权限字符\n          </span>\n          <el-input v-model=\"form.roleKey\" placeholder=\"请输入权限字符\" />\n        </el-form-item>\n        <el-form-item label=\"角色顺序\" prop=\"roleSort\">\n          <el-input-number v-model=\"form.roleSort\" controls-position=\"right\" :min=\"0\" />\n        </el-form-item>\n        <el-form-item label=\"状态\">\n          <el-radio-group v-model=\"form.status\">\n            <el-radio\n                v-for=\"dict in dict.type.sys_normal_disable\"\n                :key=\"dict.value\"\n                :label=\"dict.value\"\n            >{{dict.label}}</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"菜单权限\">\n          <el-checkbox v-model=\"menuExpand\" @change=\"handleCheckedTreeExpand($event, 'menu')\">展开/折叠</el-checkbox>\n          <el-checkbox v-model=\"menuNodeAll\" @change=\"handleCheckedTreeNodeAll($event, 'menu')\">全选/全不选</el-checkbox>\n          <el-checkbox v-model=\"form.menuCheckStrictly\" @change=\"handleCheckedTreeConnect($event, 'menu')\">父子联动</el-checkbox>\n          <el-tree\n              class=\"tree-border\"\n              :data=\"menuOptions\"\n              show-checkbox\n              ref=\"menu\"\n              node-key=\"id\"\n              :check-strictly=\"!form.menuCheckStrictly\"\n              empty-text=\"加载中，请稍候\"\n              :props=\"defaultProps\"\n          ></el-tree>\n        </el-form-item>\n        <el-form-item label=\"备注\">\n          <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 分配角色数据权限对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"openDataScope\" width=\"500px\" append-to-body>\n      <el-form :model=\"form\" label-width=\"80px\">\n        <el-form-item label=\"角色名称\">\n          <el-input v-model=\"form.roleName\" :disabled=\"true\" />\n        </el-form-item>\n        <el-form-item label=\"权限字符\">\n          <el-input v-model=\"form.roleKey\" :disabled=\"true\" />\n        </el-form-item>\n        <el-form-item label=\"权限范围\">\n          <el-select v-model=\"form.dataScope\" @change=\"dataScopeSelectChange\">\n            <el-option\n                v-for=\"item in dataScopeOptions\"\n                :key=\"item.value\"\n                :label=\"item.label\"\n                :value=\"item.value\"\n            ></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"数据权限\" v-show=\"form.dataScope == 2\">\n          <el-checkbox v-model=\"deptExpand\" @change=\"handleCheckedTreeExpand($event, 'dept')\">展开/折叠</el-checkbox>\n          <el-checkbox v-model=\"deptNodeAll\" @change=\"handleCheckedTreeNodeAll($event, 'dept')\">全选/全不选</el-checkbox>\n          <el-checkbox v-model=\"form.deptCheckStrictly\" @change=\"handleCheckedTreeConnect($event, 'dept')\">父子联动</el-checkbox>\n          <el-tree\n              class=\"tree-border\"\n              :data=\"deptOptions\"\n              show-checkbox\n              default-expand-all\n              ref=\"dept\"\n              node-key=\"id\"\n              :check-strictly=\"!form.deptCheckStrictly\"\n              empty-text=\"加载中，请稍候\"\n              :props=\"defaultProps\"\n          ></el-tree>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitDataScope\">确 定</el-button>\n        <el-button @click=\"cancelDataScope\">取 消</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { listRole, getRole, delRole, addRole, updateRole, dataScope, changeRoleStatus, deptTreeSelect } from \"@/api/system/role\";\nimport { treeselect as menuTreeselect, roleMenuTreeselect } from \"@/api/system/menu\";\n\nexport default {\n  name: \"Role\",\n  dicts: ['sys_normal_disable'],\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 显示搜索条件\n      showSearch: true,\n      // 总条数\n      total: 0,\n      // 角色表格数据\n      roleList: [],\n      // 弹出层标题\n      title: \"\",\n      // 是否显示弹出层\n      open: false,\n      // 是否显示弹出层（数据权限）\n      openDataScope: false,\n      menuExpand: false,\n      menuNodeAll: false,\n      deptExpand: true,\n      deptNodeAll: false,\n      // 日期范围\n      dateRange: [],\n      // 数据范围选项\n      dataScopeOptions: [\n        {\n          value: \"1\",\n          label: \"全部数据权限\"\n        },\n        {\n          value: \"2\",\n          label: \"自定数据权限\"\n        },\n        {\n          value: \"3\",\n          label: \"本部门数据权限\"\n        },\n        {\n          value: \"4\",\n          label: \"本部门及以下数据权限\"\n        },\n        {\n          value: \"5\",\n          label: \"仅本人数据权限\"\n        }\n      ],\n      // 菜单列表\n      menuOptions: [],\n      // 部门列表\n      deptOptions: [],\n      // 查询参数\n      queryParams: {\n        pageNum: 1,\n        pageSize: 10,\n        roleName: undefined,\n        roleKey: undefined,\n        status: undefined\n      },\n      // 表单参数\n      form: {},\n      defaultProps: {\n        children: \"children\",\n        label: \"label\"\n      },\n      // 表单校验\n      rules: {\n        roleName: [\n          { required: true, message: \"角色名称不能为空\", trigger: \"blur\" }\n        ],\n        roleKey: [\n          { required: true, message: \"权限字符不能为空\", trigger: \"blur\" }\n        ],\n        roleSort: [\n          { required: true, message: \"角色顺序不能为空\", trigger: \"blur\" }\n        ]\n      }\n    };\n  },\n  created() {\n    this.getList();\n  },\n  methods: {\n    /** 查询角色列表 */\n    getList() {\n      this.loading = true;\n      listRole(this.addDateRange(this.queryParams, this.dateRange)).then(response => {\n            this.roleList = response.rows;\n            this.total = response.total;\n            this.loading = false;\n          }\n      );\n    },\n    /** 查询菜单树结构 */\n    getMenuTreeselect() {\n      menuTreeselect().then(response => {\n        this.menuOptions = response.data;\n      });\n    },\n    // 所有菜单节点数据\n    getMenuAllCheckedKeys() {\n      // 目前被选中的菜单节点\n      let checkedKeys = this.$refs.menu.getCheckedKeys();\n      // 半选中的菜单节点\n      let halfCheckedKeys = this.$refs.menu.getHalfCheckedKeys();\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys);\n      return checkedKeys;\n    },\n    // 所有部门节点数据\n    getDeptAllCheckedKeys() {\n      // 目前被选中的部门节点\n      let checkedKeys = this.$refs.dept.getCheckedKeys();\n      // 半选中的部门节点\n      let halfCheckedKeys = this.$refs.dept.getHalfCheckedKeys();\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys);\n      return checkedKeys;\n    },\n    /** 根据角色ID查询菜单树结构 */\n    getRoleMenuTreeselect(roleId) {\n      return roleMenuTreeselect(roleId).then(response => {\n        this.menuOptions = response.menus;\n        return response;\n      });\n    },\n    /** 根据角色ID查询部门树结构 */\n    getDeptTree(roleId) {\n      return deptTreeSelect(roleId).then(response => {\n        this.deptOptions = response.depts;\n        return response;\n      });\n    },\n    // 角色状态修改\n    handleStatusChange(row) {\n      let text = row.status === \"0\" ? \"启用\" : \"停用\";\n      this.$modal.confirm('确认要\"' + text + '\"\"' + row.roleName + '\"角色吗？').then(function() {\n        return changeRoleStatus(row.roleId, row.status);\n      }).then(() => {\n        this.$modal.msgSuccess(text + \"成功\");\n      }).catch(function() {\n        row.status = row.status === \"0\" ? \"1\" : \"0\";\n      });\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 取消按钮（数据权限）\n    cancelDataScope() {\n      this.openDataScope = false;\n      this.reset();\n    },\n    // 表单重置\n    reset() {\n      if (this.$refs.menu != undefined) {\n        this.$refs.menu.setCheckedKeys([]);\n      }\n      this.menuExpand = false,\n          this.menuNodeAll = false,\n          this.deptExpand = true,\n          this.deptNodeAll = false,\n          this.form = {\n            roleId: undefined,\n            roleName: undefined,\n            roleKey: undefined,\n            roleSort: 0,\n            status: \"0\",\n            menuIds: [],\n            deptIds: [],\n            menuCheckStrictly: true,\n            deptCheckStrictly: true,\n            remark: undefined\n          };\n      this.resetForm(\"form\");\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageNum = 1;\n      this.getList();\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.dateRange = [];\n      this.resetForm(\"queryForm\");\n      this.handleQuery();\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.roleId)\n      this.single = selection.length!=1\n      this.multiple = !selection.length\n    },\n    // 更多操作触发\n    handleCommand(command, row) {\n      switch (command) {\n        case \"handleDataScope\":\n          this.handleDataScope(row);\n          break;\n        case \"handleAuthUser\":\n          this.handleAuthUser(row);\n          break;\n        default:\n          break;\n      }\n    },\n    // 树权限（展开/折叠）\n    handleCheckedTreeExpand(value, type) {\n      if (type == 'menu') {\n        let treeList = this.menuOptions;\n        for (let i = 0; i < treeList.length; i++) {\n          this.$refs.menu.store.nodesMap[treeList[i].id].expanded = value;\n        }\n      } else if (type == 'dept') {\n        let treeList = this.deptOptions;\n        for (let i = 0; i < treeList.length; i++) {\n          this.$refs.dept.store.nodesMap[treeList[i].id].expanded = value;\n        }\n      }\n    },\n    // 树权限（全选/全不选）\n    handleCheckedTreeNodeAll(value, type) {\n      if (type == 'menu') {\n        this.$refs.menu.setCheckedNodes(value ? this.menuOptions: []);\n      } else if (type == 'dept') {\n        this.$refs.dept.setCheckedNodes(value ? this.deptOptions: []);\n      }\n    },\n    // 树权限（父子联动）\n    handleCheckedTreeConnect(value, type) {\n      if (type == 'menu') {\n        this.form.menuCheckStrictly = value ? true: false;\n      } else if (type == 'dept') {\n        this.form.deptCheckStrictly = value ? true: false;\n      }\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset();\n      this.getMenuTreeselect();\n      this.open = true;\n      this.title = \"添加角色\";\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset();\n      const roleId = row.roleId || this.ids\n      const roleMenu = this.getRoleMenuTreeselect(roleId);\n      getRole(roleId).then(response => {\n        this.form = response.data;\n        this.open = true;\n        this.$nextTick(() => {\n          roleMenu.then(res => {\n            let checkedKeys = res.checkedKeys\n            checkedKeys.forEach((v) => {\n              this.$nextTick(()=>{\n                this.$refs.menu.setChecked(v, true ,false);\n              })\n            })\n          });\n        });\n        this.title = \"修改角色\";\n      });\n    },\n    /** 选择角色权限范围触发 */\n    dataScopeSelectChange(value) {\n      if(value !== '2') {\n        this.$refs.dept.setCheckedKeys([]);\n      }\n    },\n    /** 分配数据权限操作 */\n    handleDataScope(row) {\n      this.reset();\n      const deptTreeSelect = this.getDeptTree(row.roleId);\n      getRole(row.roleId).then(response => {\n        this.form = response.data;\n        this.openDataScope = true;\n        this.$nextTick(() => {\n          deptTreeSelect.then(res => {\n            this.$refs.dept.setCheckedKeys(res.checkedKeys);\n          });\n        });\n        this.title = \"分配数据权限\";\n      });\n    },\n    /** 分配用户操作 */\n    handleAuthUser: function(row) {\n      const roleId = row.roleId;\n      this.$router.push(\"/system/role-auth/user/\" + roleId);\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs[\"form\"].validate(valid => {\n        if (valid) {\n          if (this.form.roleId != undefined) {\n            this.form.menuIds = this.getMenuAllCheckedKeys();\n            updateRole(this.form).then(response => {\n              this.$modal.msgSuccess(\"修改成功\");\n              this.open = false;\n              this.getList();\n            });\n          } else {\n            this.form.menuIds = this.getMenuAllCheckedKeys();\n            addRole(this.form).then(response => {\n              this.$modal.msgSuccess(\"新增成功\");\n              this.open = false;\n              this.getList();\n            });\n          }\n        }\n      });\n    },\n    /** 提交按钮（数据权限） */\n    submitDataScope: function() {\n      if (this.form.roleId != undefined) {\n        this.form.deptIds = this.getDeptAllCheckedKeys();\n        dataScope(this.form).then(response => {\n          this.$modal.msgSuccess(\"修改成功\");\n          this.openDataScope = false;\n          this.getList();\n        });\n      }\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const roleIds = row.roleId || this.ids;\n      this.$modal.confirm('是否确认删除角色编号为\"' + roleIds + '\"的数据项？').then(function() {\n        return delRole(roleIds);\n      }).then(() => {\n        this.getList();\n        this.$modal.msgSuccess(\"删除成功\");\n      }).catch(() => {});\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      this.download('system/role/export', {\n        ...this.queryParams\n      }, `role_${new Date().getTime()}.xlsx`)\n    }\n  }\n};\n</script>\n"],"mappings":";;AA4hBA,SAAAA,QAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,OAAA,EAAAC,UAAA,EAAAC,SAAA,EAAAC,gBAAA,EAAAC,cAAA;AACA,SAAAC,UAAA,IAAAC,cAAA,EAAAC,kBAAA;AAEA;EACAC,IAAA;EACAC,KAAA;EACAC,KAAA;IACA;MACA;MACAC,OAAA;MACA;MACAC,GAAA;MACA;MACAC,MAAA;MACA;MACAC,QAAA;MACA;MACAC,UAAA;MACA;MACAC,KAAA;MACA;MACAC,QAAA;MACA;MACAC,KAAA;MACA;MACAC,IAAA;MACA;MACAC,aAAA;MACAC,UAAA;MACAC,WAAA;MACAC,UAAA;MACAC,WAAA;MACA;MACAC,SAAA;MACA;MACAC,gBAAA,GACA;QACAC,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,GACA;QACAD,KAAA;QACAC,KAAA;MACA,EACA;MACA;MACAC,WAAA;MACA;MACAC,WAAA;MACA;MACAC,WAAA;QACAC,OAAA;QACAC,QAAA;QACAC,QAAA,EAAAC,SAAA;QACAC,OAAA,EAAAD,SAAA;QACAE,MAAA,EAAAF;MACA;MACA;MACAG,IAAA;MACAC,YAAA;QACAC,QAAA;QACAZ,KAAA;MACA;MACA;MACAa,KAAA;QACAP,QAAA,GACA;UAAAQ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAR,OAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAC,QAAA,GACA;UAAAH,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAE,QAAA;IACA,KAAAC,OAAA;EACA;EACAC,OAAA;IACA;IACAD,QAAA;MACA,KAAApC,OAAA;MACAd,QAAA,MAAAoD,YAAA,MAAAlB,WAAA,OAAAN,SAAA,GAAAyB,IAAA,CAAAC,QAAA;QACA,KAAAlC,QAAA,GAAAkC,QAAA,CAAAC,IAAA;QACA,KAAApC,KAAA,GAAAmC,QAAA,CAAAnC,KAAA;QACA,KAAAL,OAAA;MACA,CACA;IACA;IACA;IACA0C,kBAAA;MACA/C,cAAA,GAAA4C,IAAA,CAAAC,QAAA;QACA,KAAAtB,WAAA,GAAAsB,QAAA,CAAAzC,IAAA;MACA;IACA;IACA;IACA4C,sBAAA;MACA;MACA,IAAAC,WAAA,QAAAC,KAAA,CAAAC,IAAA,CAAAC,cAAA;MACA;MACA,IAAAC,eAAA,QAAAH,KAAA,CAAAC,IAAA,CAAAG,kBAAA;MACAL,WAAA,CAAAM,OAAA,CAAAC,KAAA,CAAAP,WAAA,EAAAI,eAAA;MACA,OAAAJ,WAAA;IACA;IACA;IACAQ,sBAAA;MACA;MACA,IAAAR,WAAA,QAAAC,KAAA,CAAAQ,IAAA,CAAAN,cAAA;MACA;MACA,IAAAC,eAAA,QAAAH,KAAA,CAAAQ,IAAA,CAAAJ,kBAAA;MACAL,WAAA,CAAAM,OAAA,CAAAC,KAAA,CAAAP,WAAA,EAAAI,eAAA;MACA,OAAAJ,WAAA;IACA;IACA;IACAU,sBAAAC,MAAA;MACA,OAAA3D,kBAAA,CAAA2D,MAAA,EAAAhB,IAAA,CAAAC,QAAA;QACA,KAAAtB,WAAA,GAAAsB,QAAA,CAAAgB,KAAA;QACA,OAAAhB,QAAA;MACA;IACA;IACA;IACAiB,YAAAF,MAAA;MACA,OAAA9D,cAAA,CAAA8D,MAAA,EAAAhB,IAAA,CAAAC,QAAA;QACA,KAAArB,WAAA,GAAAqB,QAAA,CAAAkB,KAAA;QACA,OAAAlB,QAAA;MACA;IACA;IACA;IACAmB,mBAAAC,GAAA;MACA,IAAAC,IAAA,GAAAD,GAAA,CAAAlC,MAAA;MACA,KAAAoC,MAAA,CAAAC,OAAA,UAAAF,IAAA,UAAAD,GAAA,CAAArC,QAAA,YAAAgB,IAAA;QACA,OAAA/C,gBAAA,CAAAoE,GAAA,CAAAL,MAAA,EAAAK,GAAA,CAAAlC,MAAA;MACA,GAAAa,IAAA;QACA,KAAAuB,MAAA,CAAAE,UAAA,CAAAH,IAAA;MACA,GAAAI,KAAA;QACAL,GAAA,CAAAlC,MAAA,GAAAkC,GAAA,CAAAlC,MAAA;MACA;IACA;IACA;IACAwC,OAAA;MACA,KAAA1D,IAAA;MACA,KAAA2D,KAAA;IACA;IACA;IACAC,gBAAA;MACA,KAAA3D,aAAA;MACA,KAAA0D,KAAA;IACA;IACA;IACAA,MAAA;MACA,SAAAtB,KAAA,CAAAC,IAAA,IAAAtB,SAAA;QACA,KAAAqB,KAAA,CAAAC,IAAA,CAAAuB,cAAA;MACA;MACA,KAAA3D,UAAA,UACA,KAAAC,WAAA,UACA,KAAAC,UAAA,SACA,KAAAC,WAAA,UACA,KAAAc,IAAA;QACA4B,MAAA,EAAA/B,SAAA;QACAD,QAAA,EAAAC,SAAA;QACAC,OAAA,EAAAD,SAAA;QACAU,QAAA;QACAR,MAAA;QACA4C,OAAA;QACAC,OAAA;QACAC,iBAAA;QACAC,iBAAA;QACAC,MAAA,EAAAlD;MACA;MACA,KAAAmD,SAAA;IACA;IACA;IACAC,YAAA;MACA,KAAAxD,WAAA,CAAAC,OAAA;MACA,KAAAe,OAAA;IACA;IACA;IACAyC,WAAA;MACA,KAAA/D,SAAA;MACA,KAAA6D,SAAA;MACA,KAAAC,WAAA;IACA;IACA;IACAE,sBAAAC,SAAA;MACA,KAAA9E,GAAA,GAAA8E,SAAA,CAAAC,GAAA,CAAAC,IAAA,IAAAA,IAAA,CAAA1B,MAAA;MACA,KAAArD,MAAA,GAAA6E,SAAA,CAAAG,MAAA;MACA,KAAA/E,QAAA,IAAA4E,SAAA,CAAAG,MAAA;IACA;IACA;IACAC,cAAAC,OAAA,EAAAxB,GAAA;MACA,QAAAwB,OAAA;QACA;UACA,KAAAC,eAAA,CAAAzB,GAAA;UACA;QACA;UACA,KAAA0B,cAAA,CAAA1B,GAAA;UACA;QACA;UACA;MACA;IACA;IACA;IACA2B,wBAAAvE,KAAA,EAAAwE,IAAA;MACA,IAAAA,IAAA;QACA,IAAAC,QAAA,QAAAvE,WAAA;QACA,SAAAwE,CAAA,MAAAA,CAAA,GAAAD,QAAA,CAAAP,MAAA,EAAAQ,CAAA;UACA,KAAA7C,KAAA,CAAAC,IAAA,CAAA6C,KAAA,CAAAC,QAAA,CAAAH,QAAA,CAAAC,CAAA,EAAAG,EAAA,EAAAC,QAAA,GAAA9E,KAAA;QACA;MACA,WAAAwE,IAAA;QACA,IAAAC,QAAA,QAAAtE,WAAA;QACA,SAAAuE,CAAA,MAAAA,CAAA,GAAAD,QAAA,CAAAP,MAAA,EAAAQ,CAAA;UACA,KAAA7C,KAAA,CAAAQ,IAAA,CAAAsC,KAAA,CAAAC,QAAA,CAAAH,QAAA,CAAAC,CAAA,EAAAG,EAAA,EAAAC,QAAA,GAAA9E,KAAA;QACA;MACA;IACA;IACA;IACA+E,yBAAA/E,KAAA,EAAAwE,IAAA;MACA,IAAAA,IAAA;QACA,KAAA3C,KAAA,CAAAC,IAAA,CAAAkD,eAAA,CAAAhF,KAAA,QAAAE,WAAA;MACA,WAAAsE,IAAA;QACA,KAAA3C,KAAA,CAAAQ,IAAA,CAAA2C,eAAA,CAAAhF,KAAA,QAAAG,WAAA;MACA;IACA;IACA;IACA8E,yBAAAjF,KAAA,EAAAwE,IAAA;MACA,IAAAA,IAAA;QACA,KAAA7D,IAAA,CAAA6C,iBAAA,GAAAxD,KAAA;MACA,WAAAwE,IAAA;QACA,KAAA7D,IAAA,CAAA8C,iBAAA,GAAAzD,KAAA;MACA;IACA;IACA;IACAkF,UAAA;MACA,KAAA/B,KAAA;MACA,KAAAzB,iBAAA;MACA,KAAAlC,IAAA;MACA,KAAAD,KAAA;IACA;IACA;IACA4F,aAAAvC,GAAA;MACA,KAAAO,KAAA;MACA,MAAAZ,MAAA,GAAAK,GAAA,CAAAL,MAAA,SAAAtD,GAAA;MACA,MAAAmG,QAAA,QAAA9C,qBAAA,CAAAC,MAAA;MACApE,OAAA,CAAAoE,MAAA,EAAAhB,IAAA,CAAAC,QAAA;QACA,KAAAb,IAAA,GAAAa,QAAA,CAAAzC,IAAA;QACA,KAAAS,IAAA;QACA,KAAA6F,SAAA;UACAD,QAAA,CAAA7D,IAAA,CAAA+D,GAAA;YACA,IAAA1D,WAAA,GAAA0D,GAAA,CAAA1D,WAAA;YACAA,WAAA,CAAA2D,OAAA,CAAAC,CAAA;cACA,KAAAH,SAAA;gBACA,KAAAxD,KAAA,CAAAC,IAAA,CAAA2D,UAAA,CAAAD,CAAA;cACA;YACA;UACA;QACA;QACA,KAAAjG,KAAA;MACA;IACA;IACA;IACAmG,sBAAA1F,KAAA;MACA,IAAAA,KAAA;QACA,KAAA6B,KAAA,CAAAQ,IAAA,CAAAgB,cAAA;MACA;IACA;IACA;IACAgB,gBAAAzB,GAAA;MACA,KAAAO,KAAA;MACA,MAAA1E,cAAA,QAAAgE,WAAA,CAAAG,GAAA,CAAAL,MAAA;MACApE,OAAA,CAAAyE,GAAA,CAAAL,MAAA,EAAAhB,IAAA,CAAAC,QAAA;QACA,KAAAb,IAAA,GAAAa,QAAA,CAAAzC,IAAA;QACA,KAAAU,aAAA;QACA,KAAA4F,SAAA;UACA5G,cAAA,CAAA8C,IAAA,CAAA+D,GAAA;YACA,KAAAzD,KAAA,CAAAQ,IAAA,CAAAgB,cAAA,CAAAiC,GAAA,CAAA1D,WAAA;UACA;QACA;QACA,KAAArC,KAAA;MACA;IACA;IACA;IACA+E,cAAA,WAAAA,CAAA1B,GAAA;MACA,MAAAL,MAAA,GAAAK,GAAA,CAAAL,MAAA;MACA,KAAAoD,OAAA,CAAAC,IAAA,6BAAArD,MAAA;IACA;IACA;IACAsD,UAAA,WAAAA,CAAA;MACA,KAAAhE,KAAA,SAAAiE,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,SAAApF,IAAA,CAAA4B,MAAA,IAAA/B,SAAA;YACA,KAAAG,IAAA,CAAA2C,OAAA,QAAA3B,qBAAA;YACArD,UAAA,MAAAqC,IAAA,EAAAY,IAAA,CAAAC,QAAA;cACA,KAAAsB,MAAA,CAAAE,UAAA;cACA,KAAAxD,IAAA;cACA,KAAA4B,OAAA;YACA;UACA;YACA,KAAAT,IAAA,CAAA2C,OAAA,QAAA3B,qBAAA;YACAtD,OAAA,MAAAsC,IAAA,EAAAY,IAAA,CAAAC,QAAA;cACA,KAAAsB,MAAA,CAAAE,UAAA;cACA,KAAAxD,IAAA;cACA,KAAA4B,OAAA;YACA;UACA;QACA;MACA;IACA;IACA;IACA4E,eAAA,WAAAA,CAAA;MACA,SAAArF,IAAA,CAAA4B,MAAA,IAAA/B,SAAA;QACA,KAAAG,IAAA,CAAA4C,OAAA,QAAAnB,qBAAA;QACA7D,SAAA,MAAAoC,IAAA,EAAAY,IAAA,CAAAC,QAAA;UACA,KAAAsB,MAAA,CAAAE,UAAA;UACA,KAAAvD,aAAA;UACA,KAAA2B,OAAA;QACA;MACA;IACA;IACA;IACA6E,aAAArD,GAAA;MACA,MAAAsD,OAAA,GAAAtD,GAAA,CAAAL,MAAA,SAAAtD,GAAA;MACA,KAAA6D,MAAA,CAAAC,OAAA,kBAAAmD,OAAA,aAAA3E,IAAA;QACA,OAAAnD,OAAA,CAAA8H,OAAA;MACA,GAAA3E,IAAA;QACA,KAAAH,OAAA;QACA,KAAA0B,MAAA,CAAAE,UAAA;MACA,GAAAC,KAAA;IACA;IACA;IACAkD,aAAA;MACA,KAAAC,QAAA;QACA,QAAAhG;MACA,eAAAiG,IAAA,GAAAC,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}