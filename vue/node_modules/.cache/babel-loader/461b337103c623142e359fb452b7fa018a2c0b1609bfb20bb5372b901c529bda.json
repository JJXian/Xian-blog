{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: \"Register\",\n  data() {\n    // 验证码校验\n    const validatePassword = (rule, confirmPass, callback) => {\n      if (confirmPass === '') {\n        callback(new Error('请确认密码'));\n      } else if (confirmPass !== this.form.password) {\n        callback(new Error('两次输入的密码不一致'));\n      } else {\n        callback();\n      }\n    };\n    return {\n      isButtonDisabled: false,\n      buttonText: '发送验证码',\n      countdown: 60,\n      // 倒计时时间，单位为秒\n      form: {\n        role: 'USER'\n      },\n      rules: {\n        username: [{\n          required: true,\n          message: '请输入账号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        confirmPass: [{\n          validator: validatePassword,\n          trigger: 'blur'\n        }],\n        email: [{\n          required: true,\n          message: '请输入邮箱',\n          trigger: 'blur'\n        }, {\n          type: 'email',\n          message: '请输入正确的邮箱地址',\n          trigger: 'blur'\n        }],\n        mailVerify: [{\n          required: true,\n          message: '请输入验证码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created() {},\n  methods: {\n    sendVerificationCode() {\n      if (!this.form.email) {\n        this.$message.error('请输入邮箱地址');\n        return;\n      }\n      this.$request.post('/send/mail', {\n        email: this.form.email\n      }).then(res => {\n        if (res.code === '200') {\n          this.$message.success('验证码已发送至邮箱');\n          // 开始倒计时\n          this.startCountdown();\n        } else {\n          this.$message.closeAll();\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    startCountdown() {\n      this.isButtonDisabled = true;\n      this.buttonText = `${this.countdown} 秒后重试`;\n      const countdownInterval = setInterval(() => {\n        this.countdown--;\n        this.buttonText = `${this.countdown} 秒后重试`;\n        if (this.countdown === 0) {\n          clearInterval(countdownInterval);\n          this.isButtonDisabled = false;\n          this.buttonText = '发送验证码';\n          this.countdown = 58; // 重置倒计时时间\n        }\n      }, 1000);\n    },\n    register() {\n      this.$refs['formRef'].validate(valid => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/register', this.form).then(res => {\n            if (res.code === '200') {\n              this.$router.push('/login'); // 跳转登录页面\n              this.$message.success('注册成功');\n            } else {\n              this.$message.error(res.msg);\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","validatePassword","rule","confirmPass","callback","Error","form","password","isButtonDisabled","buttonText","countdown","role","rules","username","required","message","trigger","validator","email","type","mailVerify","created","methods","sendVerificationCode","$message","error","$request","post","then","res","code","success","startCountdown","closeAll","msg","countdownInterval","setInterval","clearInterval","register","$refs","validate","valid","$router","push"],"sources":["src/views/Register.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div style=\"width: 380px; padding: 50px 30px; background-color: rgba(255,255,255,.8); border-radius: 5px;\">\n      <div style=\"text-align: center; font-size: 24px; margin-bottom: 30px; color: #333\">欢迎注册技术研习博客</div>\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item prop=\"username\">\n          <el-input size=\"medium\" prefix-icon=\"el-icon-user\" placeholder=\"请输入账号\" v-model=\"form.username\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" placeholder=\"请输入密码\" show-password  v-model=\"form.password\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"confirmPass\">\n          <el-input size=\"medium\" prefix-icon=\"el-icon-lock\" placeholder=\"请确认密码\" show-password  v-model=\"form.confirmPass\"></el-input>\n        </el-form-item>\n<!--        邮箱验证登陆-->\n        <el-form-item prop=\"email\">\n          <el-input size=\"medium\" prefix-icon=\"el-icon-message\" placeholder=\"请输入邮箱\" v-model=\"form.email\"></el-input>\n        </el-form-item>\n\n        <el-form-item>\n          <el-row :gutter=\"20\">\n            <el-col :span=\"14\">\n              <el-input size=\"medium\" prefix-icon=\"el-icon-message\" placeholder=\"请输入验证码\" v-model=\"form.mailVerify\"></el-input>\n            </el-col>\n            <el-col :span=\"10\">\n              <el-button size=\"medium\" @click=\"sendVerificationCode\" style=\"width: 100%\">{{ buttonText }}</el-button>\n            </el-col>\n          </el-row>\n        </el-form-item>\n\n        <el-form-item>\n          <el-button size=\"medium\" style=\"width: 100%; background-color: #2a60c9; border-color: #2a60c9; color: white\" @click=\"register\">注 册</el-button>\n        </el-form-item>\n        <div style=\"display: flex; align-items: center\">\n          <div style=\"flex: 1\"></div>\n          <div style=\"flex: 1; text-align: right\">\n            已有账号？请 <a href=\"/login\">登录</a>\n          </div>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Register\",\n  data() {\n    // 验证码校验\n    const validatePassword = (rule, confirmPass, callback) => {\n      if (confirmPass === '') {\n        callback(new Error('请确认密码'))\n      } else if (confirmPass !== this.form.password) {\n        callback(new Error('两次输入的密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      isButtonDisabled: false,\n      buttonText: '发送验证码',\n      countdown: 60, // 倒计时时间，单位为秒\n      form: { role: 'USER' },\n      rules: {\n        username: [\n          { required: true, message: '请输入账号', trigger: 'blur' },\n        ],\n        password: [\n          { required: true, message: '请输入密码', trigger: 'blur' },\n        ],\n        confirmPass: [\n          { validator: validatePassword, trigger: 'blur' }\n        ],\n        email: [\n          { required: true, message: '请输入邮箱', trigger: 'blur' },\n          { type: 'email', message: '请输入正确的邮箱地址', trigger: 'blur' }\n        ],\n        mailVerify: [\n          { required: true, message: '请输入验证码', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n\n  },\n  methods: {\n    sendVerificationCode() {\n      if (!this.form.email) {\n        this.$message.error('请输入邮箱地址');\n        return;\n      }\n      this.$request.post('/send/mail', { email: this.form.email }).then(res => {\n        if (res.code === '200') {\n          this.$message.success('验证码已发送至邮箱');\n          // 开始倒计时\n          this.startCountdown();\n        } else {\n          this.$message.closeAll();\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    startCountdown() {\n      this.isButtonDisabled = true;\n      this.buttonText = `${this.countdown} 秒后重试`;\n\n      const countdownInterval = setInterval(() => {\n        this.countdown--;\n        this.buttonText = `${this.countdown} 秒后重试`;\n\n        if (this.countdown === 0) {\n          clearInterval(countdownInterval);\n          this.isButtonDisabled = false;\n          this.buttonText = '发送验证码';\n          this.countdown = 58; // 重置倒计时时间\n        }\n      }, 1000);\n    },\n    register() {\n      this.$refs['formRef'].validate((valid) => {\n        if (valid) {\n          // 验证通过\n          this.$request.post('/register', this.form).then(res => {\n            if (res.code === '200') {\n              this.$router.push('/login')  // 跳转登录页面\n              this.$message.success('注册成功');\n            } else {\n              this.$message.error(res.msg);\n            }\n          })\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  height: 100vh;\n  overflow: hidden;\n  background-image: url(\"@/assets/imgs/bg1.jpg\");\n  background-size: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #666;\n}\na {\n  color: #2a60c9;\n}\n</style>"],"mappings":";AA6CA;EACAA,IAAA;EACAC,KAAA;IACA;IACA,MAAAC,gBAAA,GAAAA,CAAAC,IAAA,EAAAC,WAAA,EAAAC,QAAA;MACA,IAAAD,WAAA;QACAC,QAAA,KAAAC,KAAA;MACA,WAAAF,WAAA,UAAAG,IAAA,CAAAC,QAAA;QACAH,QAAA,KAAAC,KAAA;MACA;QACAD,QAAA;MACA;IACA;IACA;MACAI,gBAAA;MACAC,UAAA;MACAC,SAAA;MAAA;MACAJ,IAAA;QAAAK,IAAA;MAAA;MACAC,KAAA;QACAC,QAAA,GACA;UAAAC,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAT,QAAA,GACA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAb,WAAA,GACA;UAAAc,SAAA,EAAAhB,gBAAA;UAAAe,OAAA;QAAA,EACA;QACAE,KAAA,GACA;UAAAJ,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,GACA;UAAAG,IAAA;UAAAJ,OAAA;UAAAC,OAAA;QAAA,EACA;QACAI,UAAA,GACA;UAAAN,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAK,QAAA,GAEA;EACAC,OAAA;IACAC,qBAAA;MACA,UAAAjB,IAAA,CAAAY,KAAA;QACA,KAAAM,QAAA,CAAAC,KAAA;QACA;MACA;MACA,KAAAC,QAAA,CAAAC,IAAA;QAAAT,KAAA,OAAAZ,IAAA,CAAAY;MAAA,GAAAU,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAN,QAAA,CAAAO,OAAA;UACA;UACA,KAAAC,cAAA;QACA;UACA,KAAAR,QAAA,CAAAS,QAAA;UACA,KAAAT,QAAA,CAAAC,KAAA,CAAAI,GAAA,CAAAK,GAAA;QACA;MACA;IACA;IACAF,eAAA;MACA,KAAAxB,gBAAA;MACA,KAAAC,UAAA,WAAAC,SAAA;MAEA,MAAAyB,iBAAA,GAAAC,WAAA;QACA,KAAA1B,SAAA;QACA,KAAAD,UAAA,WAAAC,SAAA;QAEA,SAAAA,SAAA;UACA2B,aAAA,CAAAF,iBAAA;UACA,KAAA3B,gBAAA;UACA,KAAAC,UAAA;UACA,KAAAC,SAAA;QACA;MACA;IACA;IACA4B,SAAA;MACA,KAAAC,KAAA,YAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,KAAAf,QAAA,CAAAC,IAAA,mBAAArB,IAAA,EAAAsB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAY,OAAA,CAAAC,IAAA;cACA,KAAAnB,QAAA,CAAAO,OAAA;YACA;cACA,KAAAP,QAAA,CAAAC,KAAA,CAAAI,GAAA,CAAAK,GAAA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}