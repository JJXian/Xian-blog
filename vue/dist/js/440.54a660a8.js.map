{"version":3,"file":"js/440.54a660a8.js","mappings":"kJAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,MAAM,CAACE,YAAY,CAAC,MAAQ,MAAM,OAAS,aAAa,CAACF,EAAG,MAAM,CAACG,YAAY,OAAOD,YAAY,CAAC,gBAAgB,UAAU,CAACF,EAAG,MAAM,CAACE,YAAY,CAAC,cAAc,OAAO,YAAY,OAAO,gBAAgB,SAAS,CAACJ,EAAIM,GAAG,gBAAgBJ,EAAG,UAAU,CAACK,IAAI,UAAUH,YAAY,CAAC,gBAAgB,QAAQI,MAAM,CAAC,MAAQR,EAAIS,KAAK,cAAc,QAAQ,MAAQT,EAAIU,QAAQ,CAACR,EAAG,eAAe,CAACM,MAAM,CAAC,MAAQ,KAAK,KAAO,UAAU,CAACN,EAAG,WAAW,CAACM,MAAM,CAAC,YAAc,MAAMG,MAAM,CAACC,MAAOZ,EAAIS,KAAKI,MAAOC,SAAS,SAAUC,GAAMf,EAAIgB,KAAKhB,EAAIS,KAAM,QAASM,EAAI,EAAEE,WAAW,iBAAiB,GAAGf,EAAG,eAAe,CAACM,MAAM,CAAC,MAAQ,KAAK,KAAO,UAAU,CAACN,EAAG,WAAW,CAACM,MAAM,CAAC,KAAO,WAAW,YAAc,MAAMG,MAAM,CAACC,MAAOZ,EAAIS,KAAKS,MAAOJ,SAAS,SAAUC,GAAMf,EAAIgB,KAAKhB,EAAIS,KAAM,QAASM,EAAI,EAAEE,WAAW,iBAAiB,GAAGf,EAAG,eAAe,CAACM,MAAM,CAAC,MAAQ,KAAK,KAAO,UAAU,CAACN,EAAG,YAAY,CAACM,MAAM,CAAC,OAASR,EAAImB,SAAW,gBAAgB,QAAU,CAAEC,MAAOpB,EAAIqB,KAAKD,OAAQ,YAAY,UAAU,aAAapB,EAAIsB,qBAAqB,CAACpB,EAAG,YAAY,CAACM,MAAM,CAAC,KAAO,YAAY,CAACR,EAAIM,GAAG,WAAW,IAAI,GAAGJ,EAAG,eAAe,CAACM,MAAM,CAAC,MAAQ,KAAK,KAAO,eAAe,CAACN,EAAG,YAAY,CAACE,YAAY,CAAC,MAAQ,QAAQO,MAAM,CAACC,MAAOZ,EAAIS,KAAKc,WAAYT,SAAS,SAAUC,GAAMf,EAAIgB,KAAKhB,EAAIS,KAAM,aAAcM,EAAI,EAAEE,WAAW,oBAAoBjB,EAAIwB,GAAIxB,EAAIyB,cAAc,SAASC,GAAM,OAAOxB,EAAG,YAAY,CAACyB,IAAID,EAAKE,GAAGpB,MAAM,CAAC,MAAQkB,EAAKE,GAAG,MAAQF,EAAKG,OAAO,IAAG,IAAI,GAAG3B,EAAG,eAAe,CAACM,MAAM,CAAC,MAAQ,KAAK,KAAO,SAAS,CAACN,EAAG,YAAY,CAACE,YAAY,CAAC,MAAQ,QAAQI,MAAM,CAAC,SAAW,GAAG,WAAa,GAAG,eAAe,GAAG,uBAAuB,IAAIG,MAAM,CAACC,MAAOZ,EAAI8B,QAAShB,SAAS,SAAUC,GAAMf,EAAI8B,QAAQf,CAAG,EAAEE,WAAW,YAAY,CAACf,EAAG,YAAY,CAACM,MAAM,CAAC,MAAQ,QAAQN,EAAG,YAAY,CAACM,MAAM,CAAC,MAAQ,UAAUN,EAAG,YAAY,CAACM,MAAM,CAAC,MAAQ,QAAQN,EAAG,YAAY,CAACM,MAAM,CAAC,MAAQ,SAASN,EAAG,YAAY,CAACM,MAAM,CAAC,MAAQ,QAAQN,EAAG,YAAY,CAACM,MAAM,CAAC,MAAQ,SAASN,EAAG,YAAY,CAACM,MAAM,CAAC,MAAQ,QAAQN,EAAG,YAAY,CAACM,MAAM,CAAC,MAAQ,SAASN,EAAG,YAAY,CAACM,MAAM,CAAC,MAAQ,SAAS,IAAI,GAAGN,EAAG,eAAe,CAACM,MAAM,CAAC,MAAQ,KAAK,KAAO,YAAY,CAACN,EAAG,MAAM,CAACM,MAAM,CAAC,GAAK,eAAe,GAAGN,EAAG,MAAM,CAACE,YAAY,CAAC,aAAa,WAAW,CAACF,EAAG,YAAY,CAACE,YAAY,CAAC,MAAQ,SAASI,MAAM,CAAC,KAAO,UAAU,KAAO,UAAUuB,GAAG,CAAC,MAAQ/B,EAAIgC,oBAAoB,CAAChC,EAAIM,GAAG,UAAU,IAAI,IAC/6E,EACI2B,EAAkB,G,uCCoDtB,GACAJ,KAAA,UACAK,IAAAA,GACA,OACAzB,KAAA,GACAY,KAAAc,KAAAC,MAAAC,aAAAC,QAAA,kBACA5B,MAAA,CACAG,MAAA,CACA,CAAA0B,UAAA,EAAAC,QAAA,SAAAC,QAAA,UAGAX,QAAA,GACAL,aAAA,GACAiB,OAAA,KACAC,OAAA,KAAAC,OAAAC,MAAAF,OAEA,EACAG,OAAAA,GACA,KAAAC,SAAAC,IAAA,uBAAAC,MAAAC,IACA,KAAAzB,aAAAyB,EAAAhB,MAAA,MAGA,KAAAa,SAAAC,IAAA,yBAAAL,QAAAM,MAAAC,IACA,KAAAzC,KAAAyC,EAAAhB,MAAA,GACA,KAAAzB,KAAAmB,KACA,KAAAE,QAAAK,KAAAC,MAAA,KAAA3B,KAAA0C,MAAA,MACAC,YAAA,KACA,KAAAV,OAAAW,IAAAC,KAAA,KAAA7C,KAAA8C,QAAA,GACA,GACA,IAGA,KAAAC,aACA,EACAC,QAAA,CACAzB,iBAAAA,GACA,KAAA0B,SAAA,eACAC,kBAAA,KACAC,iBAAA,KACAC,KAAA,YACAZ,MAAA,KAEA,KAAAa,MAAA,IAEAC,OAAA,QAIA,EACAD,IAAAA,GACA,KAAArD,KAAAI,OAIA,KAAAmD,QAAAC,KAAA,iBAGA,KAAAC,MAAAC,QAAAC,UAAAC,IACAA,IACA,KAAA5D,KAAA0C,KAAAhB,KAAAmC,UAAA,KAAAxC,SACA,KAAArB,KAAA8C,QAAA,KAAAb,OAAAW,IAAAC,OACA,KAAAP,SAAA,CACAwB,IAAA,KAAA9D,KAAAmB,GAAA,2BACA4C,OAAA,KAAA/D,KAAAmB,GAAA,aACAM,KAAA,KAAAzB,OACAwC,MAAAC,IACA,QAAAA,EAAAuB,MAEA,KAAAC,SAAAC,WACA,KAAAD,SAAAE,QAAA,SAIA,KAAAF,SAAAG,MAAA3B,EAAA4B,IACA,IAEA,KAzBA,KAAAJ,SAAAG,MAAA,SA2BA,EACAvD,kBAAAA,CAAA4B,GACA,KAAAzC,KAAAsE,MAAA7B,EAAAhB,IACA,EACAsB,WAAAA,GACA,KAAAwB,WAAA,KACA,KAAAtC,OAAA,IAAAuC,IAAA,YACA,KAAAvC,OAAAwC,UAAAC,EAAAA,EACA,KAAAzC,OAAA0C,OAAAC,gBAAA,KAAAlE,SAAA,uBACA,KAAAuB,OAAA0C,OAAAE,eAAA,OACA,KAAA5C,OAAA0C,OAAAG,iBAAA,CACAnE,MAAA,KAAAC,KAAAD,OAEA,KAAAsB,OAAA0C,OAAAI,gBAAA,CACA3B,KAAA,OAEA,KAAAnB,OAAA0C,OAAAK,OAAA,EACA,KAAA/C,OAAAgD,QAAA,GAEA,ICvJ6R,I,UCOzRC,GAAY,OACd,EACA5F,EACAkC,GACA,EACA,KACA,WACA,MAIF,EAAe0D,EAAiB,O","sources":["webpack://vue/./src/views/front/NewBlog.vue","webpack://vue/src/views/front/NewBlog.vue","webpack://vue/./src/views/front/NewBlog.vue?1868","webpack://vue/./src/views/front/NewBlog.vue?2a6c"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticStyle:{\"width\":\"50%\",\"margin\":\"5px auto\"}},[_c('div',{staticClass:\"card\",staticStyle:{\"margin-bottom\":\"100px\"}},[_c('div',{staticStyle:{\"font-weight\":\"bold\",\"font-size\":\"24px\",\"margin-bottom\":\"50px\"}},[_vm._v(\"发表新博客/编辑博客\")]),_c('el-form',{ref:\"formRef\",staticStyle:{\"padding-right\":\"50px\"},attrs:{\"model\":_vm.form,\"label-width\":\"100px\",\"rules\":_vm.rules}},[_c('el-form-item',{attrs:{\"label\":\"标题\",\"prop\":\"title\"}},[_c('el-input',{attrs:{\"placeholder\":\"标题\"},model:{value:(_vm.form.title),callback:function ($$v) {_vm.$set(_vm.form, \"title\", $$v)},expression:\"form.title\"}})],1),_c('el-form-item',{attrs:{\"label\":\"简介\",\"prop\":\"descr\"}},[_c('el-input',{attrs:{\"type\":\"textarea\",\"placeholder\":\"简介\"},model:{value:(_vm.form.descr),callback:function ($$v) {_vm.$set(_vm.form, \"descr\", $$v)},expression:\"form.descr\"}})],1),_c('el-form-item',{attrs:{\"label\":\"封面\",\"prop\":\"cover\"}},[_c('el-upload',{attrs:{\"action\":_vm.$baseUrl + '/files/upload',\"headers\":{ token: _vm.user.token },\"list-type\":\"picture\",\"on-success\":_vm.handleCoverSuccess}},[_c('el-button',{attrs:{\"type\":\"primary\"}},[_vm._v(\"上传封面\")])],1)],1),_c('el-form-item',{attrs:{\"label\":\"分类\",\"prop\":\"categoryId\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},model:{value:(_vm.form.categoryId),callback:function ($$v) {_vm.$set(_vm.form, \"categoryId\", $$v)},expression:\"form.categoryId\"}},_vm._l((_vm.categoryList),function(item){return _c('el-option',{key:item.id,attrs:{\"value\":item.id,\"label\":item.name}})}),1)],1),_c('el-form-item',{attrs:{\"label\":\"标签\",\"prop\":\"tags\"}},[_c('el-select',{staticStyle:{\"width\":\"100%\"},attrs:{\"multiple\":\"\",\"filterable\":\"\",\"allow-create\":\"\",\"default-first-option\":\"\"},model:{value:(_vm.tagsArr),callback:function ($$v) {_vm.tagsArr=$$v},expression:\"tagsArr\"}},[_c('el-option',{attrs:{\"value\":\"后端\"}}),_c('el-option',{attrs:{\"value\":\"Java\"}}),_c('el-option',{attrs:{\"value\":\"面试\"}}),_c('el-option',{attrs:{\"value\":\"Vue\"}}),_c('el-option',{attrs:{\"value\":\"前端\"}}),_c('el-option',{attrs:{\"value\":\"大数据\"}}),_c('el-option',{attrs:{\"value\":\"算法\"}}),_c('el-option',{attrs:{\"value\":\"程序员\"}}),_c('el-option',{attrs:{\"value\":\"小白\"}})],1)],1),_c('el-form-item',{attrs:{\"label\":\"内容\",\"prop\":\"content\"}},[_c('div',{attrs:{\"id\":\"editor\"}})])],1),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('el-button',{staticStyle:{\"width\":\"100px\"},attrs:{\"type\":\"primary\",\"size\":\"medium\"},on:{\"click\":_vm.showConfirmDialog}},[_vm._v(\"保 存\")])],1)],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div style=\"width: 50%; margin: 5px auto\">\n    <div class=\"card\" style=\"margin-bottom: 100px\">\n      <div style=\"font-weight: bold; font-size: 24px; margin-bottom: 50px\">发表新博客/编辑博客</div>\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\n        <el-form-item label=\"标题\" prop=\"title\" >\n          <el-input v-model=\"form.title\" placeholder=\"标题\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"简介\" prop=\"descr\">\n          <el-input type=\"textarea\" v-model=\"form.descr\" placeholder=\"简介\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"封面\" prop=\"cover\">\n          <el-upload\n              :action=\"$baseUrl + '/files/upload'\"\n              :headers=\"{ token: user.token }\"\n              list-type=\"picture\"\n              :on-success=\"handleCoverSuccess\"\n          >\n            <el-button type=\"primary\">上传封面</el-button>\n          </el-upload>\n        </el-form-item>\n        <el-form-item label=\"分类\" prop=\"categoryId\">\n          <el-select v-model=\"form.categoryId\" style=\"width: 100%\">\n            <el-option v-for=\"item in categoryList\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"标签\" prop=\"tags\">\n          <el-select v-model=\"tagsArr\" multiple filterable allow-create default-first-option style=\"width: 100%\">\n            <el-option value=\"后端\"></el-option>\n            <el-option value=\"Java\"></el-option>\n            <el-option value=\"面试\"></el-option>\n            <el-option value=\"Vue\"></el-option>\n            <el-option value=\"前端\"></el-option>\n            <el-option value=\"大数据\"></el-option>\n            <el-option value=\"算法\"></el-option>\n            <el-option value=\"程序员\"></el-option>\n            <el-option value=\"小白\"></el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"内容\" prop=\"content\" >\n          <div id=\"editor\"></div>\n        </el-form-item>\n      </el-form>\n      <!--      <div style=\"text-align: center\"><el-button type=\"primary\" size=\"medium\" style=\"width: 100px\" @click=\"save\">保 存</el-button></div>-->\n      <div style=\"text-align: center\"><el-button type=\"primary\" size=\"medium\" style=\"width: 100px\" @click=\"showConfirmDialog\">保 存</el-button></div>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport E from \"wangeditor\";\nimport hljs from \"highlight.js\";\n\nexport default {\n  name: \"NewBlog\",\n  data() {\n    return {\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        title: [\n          { required: true, message: '标题不能为空', trigger: 'blur' }\n        ],\n      },\n      tagsArr: [],\n      categoryList: [],\n      editor: null,\n      blogId: this.$route.query.blogId\n    }\n  },\n  mounted() {\n    this.$request.get('/category/selectAll').then(res => {\n      this.categoryList = res.data || []\n    })\n\n    this.$request.get('/blog/selectById/' + this.blogId).then(res => {\n      this.form = res.data || {}\n      if (this.form.id) {\n        this.tagsArr = JSON.parse(this.form.tags || '[]')\n        setTimeout(() => {\n          this.editor.txt.html(this.form.content)\n        }, 0)\n      }\n    })\n\n    this.setRichText()\n  },\n  methods: {\n    showConfirmDialog() {\n      this.$confirm('确认保存吗?', '提示', {\n        confirmButtonText: '确认',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 用户点击确认按钮的逻辑\n        this.save(); // 执行保存操作\n\n      }).catch(() => {\n        // 用户点击取消按钮的逻辑\n        // 可以选择关闭弹窗或执行其他操作\n      });\n    },\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\n      if (!this.form.title) {\n        this.$message.error('标题不能为空');\n        return; // 返回，不执行保存操作\n      }else {\n        this.$router.push('/front/person'); // 跳转到个人页面，这里假设使用了 Vue Router\n      }\n\n      this.$refs.formRef.validate((valid) => {\n        if (valid) {\n          this.form.tags = JSON.stringify(this.tagsArr)  // 把json数组转换成json字符串存到数据库\n          this.form.content = this.editor.txt.html()\n          this.$request({\n            url: this.form.id ? '/blog/update' : '/blog/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {  // 表示成功保存\n              // 关闭所有已存在的消息\n              this.$message.closeAll()\n              this.$message.success('保存成功')\n            } else {\n              // 表单验证失败，不执行保存操作，显示验证提示信息\n\n              this.$message.error(res.msg)  // 弹出错误的信息\n            }\n          })\n        }\n      })\n    },\n    handleCoverSuccess(res) {\n      this.form.cover = res.data\n    },\n    setRichText() {\n      this.$nextTick(() => {\n        this.editor = new E(`#editor`)\n        this.editor.highlight = hljs\n        this.editor.config.uploadImgServer = this.$baseUrl + '/files/editor/upload'\n        this.editor.config.uploadFileName = 'file'\n        this.editor.config.uploadImgHeaders = {\n          token: this.user.token\n        }\n        this.editor.config.uploadImgParams = {\n          type: 'img',\n        }\n        this.editor.config.zIndex = 0\n        this.editor.create()  // 创建\n      })\n    },\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n\n\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NewBlog.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./NewBlog.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./NewBlog.vue?vue&type=template&id=6e75d1f1&scoped=true\"\nimport script from \"./NewBlog.vue?vue&type=script&lang=js\"\nexport * from \"./NewBlog.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/cli-service/node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6e75d1f1\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticStyle","staticClass","_v","ref","attrs","form","rules","model","value","title","callback","$$v","$set","expression","descr","$baseUrl","token","user","handleCoverSuccess","categoryId","_l","categoryList","item","key","id","name","tagsArr","on","showConfirmDialog","staticRenderFns","data","JSON","parse","localStorage","getItem","required","message","trigger","editor","blogId","$route","query","mounted","$request","get","then","res","tags","setTimeout","txt","html","content","setRichText","methods","$confirm","confirmButtonText","cancelButtonText","type","save","catch","$router","push","$refs","formRef","validate","valid","stringify","url","method","code","$message","closeAll","success","error","msg","cover","$nextTick","E","highlight","hljs","config","uploadImgServer","uploadFileName","uploadImgHeaders","uploadImgParams","zIndex","create","component"],"sourceRoot":""}